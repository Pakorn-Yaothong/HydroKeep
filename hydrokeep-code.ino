// ---------------------
// üîß CONFIG: ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≤‡∏á ‡πÜ
// ---------------------
#include <WiFi.h>
#include <HTTPClient.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <WiFiUdp.h>
#include <NTPClient.h>

// üü° WiFi Settings
const char* ssid = "Your_SSID";               // <-- ‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠ WiFi
const char* password = "Your_WIFI_PASSWORD";  // <-- ‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™ WiFi

// üü¢ LINE Messaging API
String accessToken = "Bearer YOUR_LINE_TOKEN";  // <-- ‡πÉ‡∏™‡πà LINE TOKEN
String userId = "YOUR_LINE_USER_ID";            // <-- ‡πÉ‡∏™‡πà UserID (‡∏´‡∏£‡∏∑‡∏≠ GroupID)

// üîµ Google Chat Webhook
String googleChatWebhook = "https://chat.googleapis.com/v1/spaces/..."; // <-- ‡πÉ‡∏™‡πà Google Chat Webhook URL

// üü£ LCD I2C
LiquidCrystal_I2C lcd(0x27, 16, 2); // I2C address 0x27, ‡∏à‡∏≠‡∏Ç‡∏ô‡∏≤‡∏î 16x2

// üî¥ Pressure Sensor Pin
const int pressurePin = 34; // Analog input pin

// ‚è∞ NTP Time
WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "pool.ntp.org", 7 * 3600, 60000); // GMT+7

// ---------------------
// üìè ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ö‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á (‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°‡∏Ñ‡∏≤‡∏á‡∏´‡∏°‡∏π)
// ---------------------
const float base1 = 15.66; // ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
const float base2 = 15.70; // ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
const float height = (11.73 + 16.18) / 2; // ‡∏î‡πâ‡∏≤‡∏ô‡πÄ‡∏â‡∏µ‡∏¢‡∏á‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢
const float maxDepth = 2.5; // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∂‡∏Å‡∏ö‡πà‡∏≠‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î

const float maxVolume = 0.5 * (base1 + base2) * height * maxDepth * 1000.0; // ‡∏•‡∏¥‡∏ï‡∏£

// ---------------------
// üîî ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
// ---------------------
bool alreadyReportedToday = false;
unsigned long lastLowAlertMillis = 0;
const unsigned long alertInterval = 12UL * 60UL * 60UL * 1000UL; // 12 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á

// ---------------------
void setup() {
  Serial.begin(115200);
  Wire.begin();
  lcd.begin(16, 2);
  lcd.backlight();

  pinMode(pressurePin, INPUT);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("WiFi Connected");

  timeClient.begin();
}

// ---------------------
void loop() {
  timeClient.update();
  int hourNow = timeClient.getHours();
  int minuteNow = timeClient.getMinutes();
  unsigned long nowMillis = millis();

  // üîÑ ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ Sensor
  int raw = analogRead(pressurePin);
  float voltage = raw * (3.3 / 4095.0);
  float pressure_kPa = map(voltage * 1000, 500, 4500, 0, 100); // mV ‚Üí kPa
  float waterHeight = pressure_kPa / 9.81;
  if (waterHeight > maxDepth) waterHeight = maxDepth;

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏ô‡πâ‡∏≥
  float volume = 0.5 * (base1 + base2) * height * waterHeight * 1000.0; // ‡∏•‡∏¥‡∏ï‡∏£
  float percent = (volume / maxVolume) * 100.0;

  // üì∫ ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• LCD
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Water status: ");
  lcd.print(percent < 10 ? "LOW" : "OK ");
  lcd.setCursor(0, 1);
  lcd.print("Amount: ");
  lcd.print((int)volume);
  lcd.print(" L");

  // üìÖ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô 6 ‡πÇ‡∏°‡∏á‡πÄ‡∏ä‡πâ‡∏≤
  if (hourNow == 6 && minuteNow == 0 && !alreadyReportedToday) {
    String msg = "üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà " + String(hourNow) + " ‡∏ô.\n";
    msg += "üíß ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥: " + String((int)percent) + "%\n";
    msg += "üî¢ ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì: " + String((int)volume) + " ‡∏•‡∏¥‡∏ï‡∏£\n";
    msg += "‚úÖ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: " + String(percent < 10 ? "‚ö†Ô∏è ‡∏ï‡πà‡∏≥" : "‡∏õ‡∏Å‡∏ï‡∏¥");
    sendLineMessage(msg);
    sendGoogleChatMessage(msg);
    alreadyReportedToday = true;
  }

  // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå flag 7 ‡πÇ‡∏°‡∏á
  if (hourNow == 7) alreadyReportedToday = false;

  // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏´‡∏≤‡∏Å‡∏ô‡πâ‡∏≥‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 10%
  if (percent < 10.0 && nowMillis - lastLowAlertMillis > alertInterval) {
    String warnMsg = "üö® ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô! ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥‡∏ï‡πà‡∏≥\n";
    warnMsg += "üíß ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏û‡∏µ‡∏¢‡∏á: " + String((int)percent) + "%\n";
    warnMsg += "üî¢ ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì: " + String((int)volume) + " ‡∏•‡∏¥‡∏ï‡∏£";
    sendLineMessage(warnMsg);
    sendGoogleChatMessage(warnMsg);
    lastLowAlertMillis = nowMillis;
  }

  delay(10000); // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ó‡∏∏‡∏Å 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
}

// ---------------------
// üì§ LINE
// ---------------------
void sendLineMessage(String message) {
  HTTPClient http;
  http.begin("https://api.line.me/v2/bot/message/push");
  http.addHeader("Content-Type", "application/json");
  http.addHeader("Authorization", accessToken);

  String body = "{\"to\":\"" + userId + "\",\"messages\":[{\"type\":\"text\",\"text\":\"" + message + "\"}]}";
  http.POST(body);
  http.end();
}

// ---------------------
// üì§ Google Chat
// ---------------------
void sendGoogleChatMessage(String msg) {
  HTTPClient http;
  http.begin(googleChatWebhook);
  http.addHeader("Content-Type", "application/json");

  String json = "{\"text\": \"" + msg + "\"}";
  http.POST(json);
  http.end();
}
